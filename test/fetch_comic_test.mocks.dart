// Mocks generated by Mockito 5.0.10 from annotations
// in get_comics/test/fetch_comic_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:get_comics/email_sender.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [EmailSender].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmailSender extends _i1.Mock implements _i2.EmailSender {
  MockEmailSender() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get smtp_server =>
      (super.noSuchMethod(Invocation.getter(#smtp_server), returnValue: '')
          as String);
  @override
  int get smtp_port =>
      (super.noSuchMethod(Invocation.getter(#smtp_port), returnValue: 0)
          as int);
  @override
  String get smtp_username =>
      (super.noSuchMethod(Invocation.getter(#smtp_username), returnValue: '')
          as String);
  @override
  String get smtp_password =>
      (super.noSuchMethod(Invocation.getter(#smtp_password), returnValue: '')
          as String);
  @override
  String get sender =>
      (super.noSuchMethod(Invocation.getter(#sender), returnValue: '')
          as String);
  @override
  _i3.Future<bool> send(List<String>? to, String? subject, String? imageUrl) =>
      (super.noSuchMethod(Invocation.method(#send, [to, subject, imageUrl]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  void disconnect() => super.noSuchMethod(Invocation.method(#disconnect, []),
      returnValueForMissingStub: null);
}
