# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.--coverage reports/coverage
#       - name: Test
#         run: dart test --file-reporter json:reports/tests.json 

#       - name: Test Reporter
#         uses: dorny/test-reporter@v1.4.3
#         if: success() || failure() 
#         with:
#           name: Dart Tests
#           path: reports/*.json
#           reporter: dart-json

#       - name: fudge coverage of missed files
#         uses: stelynx/dart-full-coverage@v1.0.5
#         if: success() || failure() 
#         with:
#           package: get_comics
#       - name: run coverage
#         if: success() || failure() 
#         run: dart run test --coverage=coverage
#       - name: report coverage
#         uses: zgosalvez/github-actions-report-lcov@v1
#         if: success() || failure() 
#         with:
#           coverage-files: coverage/lcov*.info
#           artifact-name: code-coverage-report
#           github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: dart compile exe -o get-comics-x86-64 bin/get_comics.dart
      - name: Release
        uses: SierraSoftworks/gh-releases@v1.0.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          overwrite: 'true'
          files: |
            get-comics-x86-64

#         uses: softprops/action-gh-release@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with: 
#           files: |
#             get-comics-x86-64
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
